<!-- Plugin Configuration File. Read more: https://plugins.jetbrains.com/docs/intellij/plugin-configuration-file.html -->
<idea-plugin require-restart="true">
	<!-- Unique identifier of the plugin. It should be FQN. It cannot be changed between the plugin versions. -->
	<id>com.aeolid.GeneratorProofing</id>

	<!-- Public plugin name should be written in Title Case.
		 Guidelines: https://plugins.jetbrains.com/docs/marketplace/plugin-overview-page.html#plugin-name -->
	<name>Generator Proofing</name>

	<!-- A displayed Vendor name or Organization ID displayed on the Plugins Page. -->
	<vendor url="https://aeolid.com" email="info@aeolid.com">Aeolid Software</vendor>

	<!-- Description of the plugin displayed on the Plugin Page and IDE Plugin Manager.
		 Simple HTML elements (text formatting, paragraphs, and lists) can be added inside of <![CDATA[ ]]> tag.
		 Guidelines: https://plugins.jetbrains.com/docs/marketplace/plugin-overview-page.html#plugin-description -->
	<description><![CDATA[
A simple Java Plugin preventing you from committing code in partially generated files.

<h2>Usage</h2>
<h3>Basic configuration</h3>
The plugin is intended for generated code that is marked with a header comment and contains implementation begin and end tags:
<pre>
// Generated file

public class MyClass {
    public int add(int a, int b) {
        var result = 0;
        // IMPLEMENTATION BEGIN
        result = a + b; // only content between the tags can be edited
        // IMPLEMENTATION END
        return result; // changing this line would cause an error
    }
}
</pre>
The specific trigger strings have to be configured in the inspection settings under <b>Settings... | Editor | Inspections | Java | Probable bugs | Change in generated code</b>. E.g. for above file to work the fields would be configured as:<br>
<br>
Header pattern: &nbsp;&nbsp;<b><code>// Generated file</code></b><br>
Begin pattern: &nbsp;&nbsp;<b><code>// IMPLEMENTATION BEGIN</code></b><br>
End pattern: &nbsp;&nbsp;<b><code>// IMPLEMENTATION END</code></b><br>
<br>
Substrings are acceptable e.g. header pattern &nbsp;&nbsp;<b><code>* Generated File</code></b>&nbsp;&nbsp; will still match inside a multiline comment:
<pre>
/*
 * Generated File
 * created on 2023-02-01
 */
</pre>

<h3>Additional features</h3>
The plugin can be told to ignore the currently marked file by using the Quick Fix feature (either by pressing <b>Alt+Enter</b> or clicking the light bulb icon) and selecting <b>Ignore file until restart/changes have been rolled back...</b>. This will stop the inspection from marking any current changes to the file as errors until the IDE is restarted or all changes have been reverted.
]]></description>
	<change-notes><![CDATA[
<h3>New Features</h3>
<h2>1.2.5</h2>
<ul>
	<li>added separate global and project-specific settings</li>
</ul>
<h2>1.2.4</h2>
<ul>
	<li>improved explanation in plugin description</li>
</ul>
<h2>1.2.3</h2>
<ul>
	<li>Explanatory text for available fields</li>
	<li>Code Warnings can now be temporarily suppressed for a given file</li>
</ul>
]]></change-notes>
	<!-- Product and plugin compatibility requirements.
		 Read more: https://plugins.jetbrains.com/docs/intellij/plugin-compatibility.html -->
	<depends>com.intellij.modules.platform</depends>
	<depends>com.intellij.java</depends>

	<!-- Extension points defined by the plugin.
		 Read more: https://plugins.jetbrains.com/docs/intellij/plugin-extension-points.html -->
	<extensions defaultExtensionNs="com.intellij">
		<localInspection
			language="JAVA"
			bundle="messages.InspectionBundle"
			key="inspection.generatedCodePattern.name"
			groupPath="Java"
			groupBundle="messages.InspectionsBundle"
			groupKey="group.names.probable.bugs"
			enabledByDefault="true"
			level="ERROR"
			implementationClass="com.aeolid.generatorproofing.InspectionImpl"
		/>
	</extensions>
</idea-plugin>